#!/bin/bash
DOTFILES_NAME=.dotfiles

# Ctrl+Z will send the process to background, use "resume" to bring it back
alias resume="fg"

# Shortcuts
alias reloaddns="dscacheutil -flushcache && sudo killall -HUP mDNSResponder"
alias reloadzshplugins="rm -f ~/.zsh_plugins ~/.zsh_plugins.tmux && source ~/.zshrc"

alias dr="defaults read"
alias dw="defaults write"

# exa (ls replacement)
alias ls="exa"
alias l="exa -lFh --git"
alias la="exa -laFh --git"
alias ll="exa -l --git"

# bat (cat replacement)
alias cat="bat"

alias news="curl -sSL hackurls.com/ascii | less"
alias reddit="ssh redditbox.us"

# termbin (pipe text to this alias)
alias tb="nc termbin.com 9999"

# show public ip
if test `command -v curl`; then
  alias myip="curl eth0.me"
else
  alias myip="echo GET / | nc eth0.me 80"
fi
# HTTPie
alias https="http --default-scheme=https"

# Docker
alias d='docker'

transfer() {
  if test $# -eq 0; then
    echo -e "No arguments specified. Usage:\necho transfer /tmp/test.md\ncat /tmp/test.md | transfer test.md"
    return 1
  fi 
  tmpfile=$(mktemp -t transferXXX);
  if tty -s; then
    basefile=$(basename "$1" | sed -e 's/[^a-zA-Z0-9._-]/-/g')
    curl --progress-bar --upload-file "$1" "https://transfer.sh/$basefile" >> $tmpfile
  else
    curl --progress-bar --upload-file "-" "https://transfer.sh/$1" >> $tmpfile
  fi
  cat $tmpfile
  rm -f $tmpfile
} 

map() {
  if test `command -v npx`; then
    npx mapscii
    return
  fi
  docker info >/dev/null 2>&1
  if test $? -eq 0; then
    docker run -it --rm --name map-cli node:lts-alpine npx mapscii
    return
  fi
  if test `command -v telnet`; then
    telnet mapscii.me
  fi
}

# Test if docker is running or not
docker info >/dev/null 2>&1
if [ $? -eq 0 ]; then
  # Docker is running, setting aliases to use Docker instead
  if [ "$(arch)" = "armv7l" ]; then
    # Raspberry Pi variant
    alias mysql="docker run -it --rm --name mysql-cli jsurf/rpi-mariadb mysql"
  else
    alias mysql="docker run -it --rm --name mysql-cli mysql:5.7 mysql"
  fi

  alias node="docker run -it --rm --name node-cli -v \$(pwd):/opt/app:delegated -w /opt/app node:lts-alpine node"
  alias npm="docker run -it --rm --name npm-cli -p 8000:8000 -v \$(pwd):/opt/app:delegated -w /opt/app node:lts-alpine npm"
  alias python2="docker run -it --rm --name python2-cli -v \$(pwd):/opt/app:delegated -w /opt/app python:2-alpine python"
  alias python3="docker run -it --rm --name python3-cli -v \$(pwd):/opt/app:delegated -w /opt/app python:3-alpine python"
  alias terraform="docker run -it --rm --name terraform-cli -v \$(pwd):/opt/app:delegated -w /opt/app hashicorp/terraform"
  alias sqlite3="docker run -it --rm --name sqlite3-cli -v \$(pwd):/opt/app:delegated -w /opt/app nouchka/sqlite3"
  alias redis-cli="docker run -it --rm --name redis-cli redis:alpine redis-cli"
  alias build-wtfutil="curl -sSL https://raw.githubusercontent.com/wtfutil/wtf/master/Dockerfile | docker build --build-arg=version=v0.26.0 -t wtfutil -"
  alias wtfutil="docker run -it --rm --name wtfutil -v ${HOME}/$DOTFILES_NAME/wtfutil/config.yml:/config/config.yml wtfutil --config=/config/config.yml"
  alias browsh="docker run --rm -it browsh/browsh"

  # Docker version of tools
  alias docker-redis="docker run -d -p 6379:6379 --rm --name redis redis:alpine"
  alias docker-redis-cluster="docker run -d -p 7000-7050:7000-7050 -p 5000-5010:5000-5010 --rm --name redis-cluster grokzen/redis-cluster"
  alias docker-mongo="docker run -d -p 27017:27017 --rm --name mongo mongo"
  alias docker-mysql="docker run -d -p 3306:3306 --rm -e MYSQL_ROOT_PASSWORD=root -v ${HOME}/mysql/data:/var/lib/mysql -v ${HOME}/$DOTFILES_NAME/mysql/config:/etc/mysql/conf.d --name mysql mysql:5.7"

  # Shortcut
  alias docker-update="(docker images --format \"{{.Repository}}:{{.Tag}}\" | xargs -n1 docker pull) && (docker rmi \$(docker images 0f \"dangling=true\" -q))"
fi

unalias vol >/dev/null 2>/dev/null
if [ "$(uname)" = "Darwin" ]; then
  vol() {
    osascript -e "set Volume $((($1 + 5) / 10))"
  } 
else
  alias vol="amixer set Master"
fi

# TMUX
alias tmux="tmux -2"

# NVIM
alias vim="nvim"
alias vi="nvim"

# lazygit
alias lg="lazygit"

# for opt + ← and opt + → to skip a word
bindkey '^[[1;3C' forward-word
bindkey '^[[1;3D' backward-word
